#usage: d2 --watch architecture.d2 architecture.svg


dbCreation: database creation: {
    sparql: SparQL
    urllib: get image links
    csv: save to csv
    supabase: save to supabase dB

    sparql -> urllib: combine semantic data with image uris
    urllib -> csv: save combined data to csv
    urllib -> supabase: insert data into supabase database
}

path: dBPathFinder: {
    db_access: access the database
    path_finding: search path

    db_access -> path_finding: give signal that start searching a path
}
img: imageConversion: {
    download_img: download images from path
    convert: convert downloaded images
    download_text: download semantic data for this path
    in_between: create in between papers
    sort: sort both lists of images

    download_img -> convert: finished downloading images
    download_text -> in_between: fetched semantic data

    convert -> sort: flag once all images converted
    in_between -> sort: flag once all in between images generated
}

wait: wait for toilet paper to be placed

print: print on toilet paper: {
}

finish: finish printing paper {
    rollup: rollup paper
    signal: give signal that this toilet roll is good to go

    rollup -> signal: rolled up
}

path.db_access -> dbCreation.sparql: if no database or csv to be found
dbCreation.csv -> path: signal that database is created
dbCreation.supabase -> path: signal that database is created

path.path_finding -> wait: found a suitable path
wait -> print: button pushed indicating
print -> img: on to the next image
print -> finish: did reach the last printable paper
finish -> path: another round